<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>RecyclerView - Tag - My New Hugo Site</title>
        <link>http://example.org/tags/recyclerview/</link>
        <description>RecyclerView - Tag - My New Hugo Site</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Sat, 02 Jul 2022 14:36:00 &#43;0800</lastBuildDate><atom:link href="http://example.org/tags/recyclerview/" rel="self" type="application/rss+xml" /><item>
    <title>RecyclerView 简单使用</title>
    <link>http://example.org/posts/2022/07/recycler-view/</link>
    <pubDate>Sat, 02 Jul 2022 14:36:00 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://example.org/posts/2022/07/recycler-view/</guid>
    <description><![CDATA[RecyclerView 这个 View 的使用当初我用的不是很明白，现在有点懂了，我们自顶向下设计 View 代码总览 在 MainActivity 中， @Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_main); RecyclerView recyclerView = (RecyclerView) findViewById(R.id.recyclerview); List&lt;Integer&gt; data = Stream.iterate(1, n -&gt; n + 1).limit(100).collect(Collectors.toList()); CustomAdapter adapter = new CustomAdapter(data); RecyclerView.LayoutManager layoutManager = new GridLayoutManager(this, 4); recyclerView.setAdapter(adapter); recyclerView.setLayoutManager(layoutManager); } 我们 定义了一个 RecyclerView 定义了一个 CustomAdapter 为 CustomAdapter 提供了数据 为 RecyclerView 设置 adapter 为 RecyclerView 设置 layoutmanager 注意，这里我们没用到 ViewHolder 这个东西，这个东西由 Adapter 操纵，相当于 RecyclerView Adapter ViewHolder ViewHolder ViewHolder ViewHolder 有关Adapter 定义 Adapter 需要继承 RecyclerView.]]></description>
</item>
</channel>
</rss>
